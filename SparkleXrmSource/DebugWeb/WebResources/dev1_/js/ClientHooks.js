// ClientHooks.js
var scriptLoader=scriptLoader||{delayedLoads:[],load:function(name,requires,script){window._loadedScripts=window._loadedScripts||{};if(requires==null||requires.length==0||scriptLoader.areLoaded(requires)){scriptLoader.runScript(name,script);} else{scriptLoader.delayedLoads.push({name:name,requires:requires,script:script});}},runScript:function(name,script){script.call(window);window._loadedScripts[name]=true;scriptLoader.onScriptLoaded(name);},onScriptLoaded:function(name){scriptLoader.delayedLoads.forEach(function(script){if(script.loaded==null&&scriptLoader.areLoaded(script.requires)){script.loaded=true;scriptLoader.runScript(script.name,script.script);}});},areLoaded:function(requires){var allLoaded=true;for(var i=0;i<requires.length;i++){var isLoaded=(window._loadedScripts[requires[i]]!=null);allLoaded=allLoaded&&isLoaded;if(!allLoaded)break;} return allLoaded;}};scriptLoader.load("clienthooks",["mscorlib","xrm"],function(){
window.dev1_session_StatusCode=function(){};dev1_session_StatusCode.prototype = {draft:1}
dev1_session_StatusCode.registerEnum('dev1_session_StatusCode',false);window.ActivityPointer=function(){ActivityPointer.initializeBase(this,['activitypointer']);}
ActivityPointer.prototype={activityid:null,subject:null,activitytypecode:null,regardingobjectid:null,displaySubject:null,$1_0:function(){this.logicalName=this.activitytypecode;}}
window.dev1_session=function(){dev1_session.initializeBase(this,['dev1_session']);this._metaData['dev1_duration']=SparkleXrm.Sdk.AttributeTypes.int_;}
dev1_session.prototype={createdon:null,dev1_description:null,dev1_duration:null,dev1_activityid:null,dev1_activitytypename:null,dev1_emailid:null,dev1_phonecallid:null,dev1_letterid:null,dev1_taskid:null,dev1_endtime:null,dev1_row:null,statuscode:null,dev1_sessionid:null,dev1_starttime:null,contract_customerid:null,incident_customerid:null,opportunity_customerid:null,activitypointer_regardingobjectid:null,activitypointer_subject:null,account:null}
Type.registerNamespace('Client.TimeSheet.Model');Client.TimeSheet.Model.Queries=function(){}
Type.registerNamespace('ClientHooks');ClientHooks.OpportunityForm=function(){}
ClientHooks.OpportunityForm.onload=function(){Xrm.Page.data.process.addOnStageChange(function($p1_0){
debugger;});Xrm.Page.data.process.addOnStageSelected(function($p1_0){
debugger;});debugger;var $0=Xrm.Page.data.process.getActiveProcess();var $1=Xrm.Page.data.process.getActiveStage();var $2=$0.getStages();if($2.getLength()>0){var $3=$2.get(0);var $4=$3.getSteps();}Xrm.Page.ui.process.setVisible(true);}
Type.registerNamespace('Client.TimeSheet.RibbonCommands');Client.TimeSheet.RibbonCommands.Global=function(){}
Client.TimeSheet.RibbonCommands.Global.newAccount=function(){Xrm.Utility.openEntityForm('account',null,null);}
Client.TimeSheet.RibbonCommands.Global.accountOnSave=function(){if(Xrm.Page.ui.getFormType()===10*.1){var $0=window.top.opener;if(typeof($0.Client)!=='undefined'){$0.Client.TimeSheet.RibbonCommands.Global.newAccountCallBack();}}}
Client.TimeSheet.RibbonCommands.Global.newAccountCallBack=function(){alert('Refresh!');}
Client.TimeSheet.RibbonCommands.Global.getRunningActivities=function(commandProperties){var $0=SparkleXrm.Sdk.OrganizationServiceProxy.retrieveMultiple(Client.TimeSheet.Model.Queries.currentOpenActivitesWithSessions);var $1=new SparkleXrm.Sdk.Ribbon.RibbonMenuSection('dev1.Activities.Section','Activities',1,'Menu16');var $2=0;var $enum1=ss.IEnumerator.getEnumerator($0.get_entities());while($enum1.moveNext()){var $4=$enum1.current;var $5='WebResources/dev1_/images/start.gif';var $6=$4['isRunning']!=null&&($4['isRunning'].toString()==='1');if($6){$5='WebResources/dev1_/images/stop.gif';}$1.addButton(new SparkleXrm.Sdk.Ribbon.RibbonButton('dev1.Activity.'+$4['a.activityid'].toString(),$2,$4['a.subject'].toString(),'dev1.ApplicationRibbon.StartStopActivity.Command',$5,$5));$2++;}var $3=new SparkleXrm.Sdk.Ribbon.RibbonMenu('dev1.Activities').addSection($1);commandProperties.PopulationXML=$3.serialiseToRibbonXml();}
Client.TimeSheet.RibbonCommands.Global.startStopActivity=function(commandProperties){alert(commandProperties.SourceControlId);var $0='activityid='+commandProperties.SourceControlId.replaceAll('dev1.Activity.','');var $1=encodeURIComponent($0);Xrm.Utility.openWebResource('dev1_/scripts/StartStopSession.htm',$1,400,300);}
ActivityPointer.registerClass('ActivityPointer',SparkleXrm.Sdk.Entity);dev1_session.registerClass('dev1_session',SparkleXrm.Sdk.Entity);Client.TimeSheet.Model.Queries.registerClass('Client.TimeSheet.Model.Queries');ClientHooks.OpportunityForm.registerClass('ClientHooks.OpportunityForm');Client.TimeSheet.RibbonCommands.Global.registerClass('Client.TimeSheet.RibbonCommands.Global');ActivityPointer.entityLogicalName='activitypointer';ActivityPointer.entityTypeCode=4200;dev1_session.entityLogicalName='dev1_session';dev1_session.entityTypeCode=10000;Client.TimeSheet.Model.Queries.currentRunningActivities="<fetch version='1.0' output-format='xml-platform' mapping='logical' distinct='false'>"+"<entity name='activitypointer'>"+"<attribute name='activitytypecode' />"+"<attribute name='subject' />"+"<attribute name='activityid' />"+"<attribute name='instancetypecode' />"+"<order attribute='modifiedon' descending='false' />"+"<filter type='and'>"+"<condition attribute='ownerid' operator='eq-userid' />"+'</filter>'+'</entity>'+'</fetch>';Client.TimeSheet.Model.Queries.currentOpenActivitesWithSessions="<fetch version='1.0' output-format='xml-platform' mapping='logical' aggregate='true'>"+"<entity name='activitypointer'>"+"<attribute name='subject' groupby='true' alias='a.subject'/>"+"<attribute name='activityid' groupby='true' alias='a.activityid'/>"+"<filter type='and'>"+"<condition attribute='ownerid' operator='eq-userid'  />"+"<condition attribute='statecode' operator='not-in'>"+'<value>1</value>'+'<value>2</value>'+'</condition>'+'</filter>'+"<link-entity name='dev1_session' from='dev1_activityid' to='activityid' alias='s'>"+"<attribute name='dev1_runningflag' aggregate='max' distinct='true' alias='isRunning'/>"+'</link-entity>'+'</entity>'+'</fetch>';Client.TimeSheet.Model.Queries.sessionsByWeekStartDate="\r\n                    <fetch>\r\n                        <entity name='dev1_session' >\r\n                            <attribute name='dev1_sessionid' />\r\n                            <attribute name='dev1_description' />\r\n                            <attribute name='dev1_activityid' />\r\n                            <attribute name='dev1_activitytypename' />\r\n                            <attribute name='dev1_starttime' />\r\n                            <attribute name='dev1_endtime' />\r\n                            <attribute name='dev1_duration' />\r\n                            <attribute name='dev1_taskid' />\r\n                            <attribute name='dev1_letterid' />\r\n                            <attribute name='dev1_emailid' />\r\n                            <attribute name='dev1_phonecallid' />\r\n                            <attribute name='statuscode' />\r\n                            <attribute name='dev1_row' />\r\n                            <order attribute='dev1_row' descending='false' />\r\n                            <filter type='and'>\r\n                                <condition attribute='dev1_starttime' operator='on-or-after' value='{0}' />\r\n                                <condition attribute='dev1_starttime' operator='on-or-before' value='{1}' />\r\n                            </filter>\r\n                            <link-entity name='activitypointer' from='activityid' to='dev1_activityid' alias='aa' >\r\n                                <attribute name='regardingobjectid' alias='activitypointer_regardingobjectid' />\r\n                                <attribute name='subject' alias='activitypointer_subject' />\r\n                                <link-entity name='contract' from='contractid' to='regardingobjectid' visible='false' link-type='outer' alias='contract' >\r\n                                    <attribute name='customerid' alias='contract_customerid'/>\r\n                                </link-entity>\r\n                                <link-entity name='opportunity' from='opportunityid' to='regardingobjectid' visible='false' link-type='outer' alias='opportunity' >\r\n                                    <attribute name='customerid' alias='opportunity_customerid'/>\r\n                                </link-entity>\r\n                                <link-entity name='incident' from='incidentid' to='regardingobjectid' visible='false' link-type='outer' alias='incident' >\r\n                                    <attribute name='customerid' alias='incident_customerid'/>\r\n                                </link-entity>\r\n                            </link-entity>\r\n                        </entity>\r\n                    </fetch>";});